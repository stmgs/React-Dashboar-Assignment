{"ast":null,"code":"var _jsxFileName = \"/Users/laughing-pill/Desktop/React-Dashboard-Assignment/src/components/BarChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, BarElement } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(BarElement);\n\nconst BarChart = () => {\n  _s();\n\n  var _chart$coins, _chart$coins2, _chart$coins3;\n\n  const [chart, setChart] = useState({});\n  var baseUrl = \"https://api.coinranking.com/v2/coins/?limit=10\";\n  var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  var apiKey = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"; //fetch data from coinranking api. \n  //Note: in order to add the coin ranking api, we need to have a custom domain or proxy url.\n  //due to this it might not work in your browser, so to overcome this, open the console and click on CORS link. \n  //You will be redirected to a webpage. Click on request temporary access and it will work.\n\n  useEffect(() => {\n    const fetchCoins = async () => {\n      await fetch(`${proxyUrl}${baseUrl}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-access-token': `${apiKey}`,\n          'Access-Control-Allow-Origin': \"*\"\n        }\n      }).then(response => {\n        if (response.ok) {\n          response.json().then(json => {\n            console.log(json.data);\n            setChart(json.data);\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    fetchCoins();\n  }, [baseUrl, proxyUrl, apiKey]);\n  console.log(\"chart\", chart);\n  var data = {\n    labels: chart === null || chart === void 0 ? void 0 : (_chart$coins = chart.coins) === null || _chart$coins === void 0 ? void 0 : _chart$coins.map(x => x.name),\n    datasets: [{\n      label: `${chart === null || chart === void 0 ? void 0 : (_chart$coins2 = chart.coins) === null || _chart$coins2 === void 0 ? void 0 : _chart$coins2.length} Coins Available`,\n      data: chart === null || chart === void 0 ? void 0 : (_chart$coins3 = chart.coins) === null || _chart$coins3 === void 0 ? void 0 : _chart$coins3.map(x => x.price),\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n      borderWidth: 1\n    }]\n  };\n  var options = {\n    maintainAspectRatio: false,\n    scales: {},\n    legend: {\n      labels: {\n        fontSize: 25\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      height: 400,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BarChart, \"ip4zykqV5S/78tH8IJvHUJRfpBU=\");\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/Users/laughing-pill/Desktop/React-Dashboard-Assignment/src/components/BarChart.js"],"names":["React","useState","useEffect","Chart","ChartJS","BarElement","Bar","register","BarChart","chart","setChart","baseUrl","proxyUrl","apiKey","fetchCoins","fetch","method","headers","then","response","ok","json","console","log","data","catch","error","labels","coins","map","x","name","datasets","label","length","price","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","scales","legend","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Chart as ChartJS,\r\n\r\n  BarElement,\r\n\r\n} from 'chart.js';\r\n\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  BarElement,\r\n);\r\n\r\n\r\nconst BarChart = () => {\r\n  const [chart, setChart] = useState({})\r\n  var baseUrl = \"https://api.coinranking.com/v2/coins/?limit=10\";\r\n  var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\n  var apiKey = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";\r\n\r\n\r\n  //fetch data from coinranking api. \r\n  //Note: in order to add the coin ranking api, we need to have a custom domain or proxy url.\r\n  //due to this it might not work in your browser, so to overcome this, open the console and click on CORS link. \r\n  //You will be redirected to a webpage. Click on request temporary access and it will work.\r\n  useEffect(() => {\r\n    const fetchCoins = async () => {\r\n      await fetch(`${proxyUrl}${baseUrl}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-access-token': `${apiKey}`,\r\n          'Access-Control-Allow-Origin': \"*\"\r\n        }\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            response.json().then((json) => {\r\n              console.log(json.data);\r\n              setChart(json.data)\r\n            });\r\n          }\r\n        }).catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n    fetchCoins()\r\n  }, [baseUrl, proxyUrl, apiKey])\r\n\r\n  console.log(\"chart\", chart);\r\n  var data = {\r\n    labels: chart?.coins?.map(x => x.name),\r\n    datasets: [{\r\n      label: `${chart?.coins?.length} Coins Available`,\r\n      data: chart?.coins?.map(x => x.price),\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)',\r\n        'rgba(75, 192, 192, 0.2)',\r\n        'rgba(153, 102, 255, 0.2)',\r\n        'rgba(255, 159, 64, 0.2)'\r\n      ],\r\n      borderColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)'\r\n      ],\r\n      borderWidth: 1\r\n    }]\r\n  };\r\n\r\n  var options = {\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n    },\r\n    legend: {\r\n      labels: {\r\n        fontSize: 25,\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Bar\r\n        data={data}\r\n        height={400}\r\n        options={options}\r\n\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BarChart\r\n"]},"metadata":{},"sourceType":"module"}